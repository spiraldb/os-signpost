name: "Setup Rust"
description: "Toolchain setup and Initial compilation"

inputs:
  toolchain:
    description: "optional override for the toolchain version (e.g. nightly)"
    required: false
  components:
    description: "optional override for the components to install for the step (e.g. clippy, rustfmt, miri)"
    required: false
  targets:
    description: "optional targets override (e.g. wasm32-unknown-unknown)"
    required: false

runs:
  using: "composite"
  steps:
    - name: Rust Version
      id: rust-version
      shell: bash
      run: echo "version=$(cat rust-toolchain.toml | grep channel | awk -F'\"' '{print $2}')" >> $GITHUB_OUTPUT

    - name: Install Mold
      uses: rui314/setup-mold@v1

    - name: Rust Toolchain
      id: rust-toolchain
      uses: dtolnay/rust-toolchain@master
      if: steps.rustup-cache.outputs.cache-hit != 'true'
      with:
        toolchain: "${{ inputs.toolchain || steps.rust-version.outputs.version }}"
        targets: "${{inputs.targets || ''}}"
        components: "${{ inputs.components || 'clippy, rustfmt' }}"

    - name: Rust Dependency Cache
      uses: Swatinem/rust-cache@v2
      with:
        save-if: ${{ github.ref_name == 'develop' }}
        shared-key: "rust-cache-${{ runner.os }}-${{ runner.environment }}"  # To allow reuse across jobs

    - name: Rust Compile Cache
      uses: mozilla-actions/sccache-action@v0.0.9

    - name: Export Path
      shell: bash
      run: echo "PATH=$PATH" >> $GITHUB_ENV
